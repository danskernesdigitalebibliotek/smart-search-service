{{- if .Values.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: {{ .Values.ingress.cert }}
    prometheus.io/scrape: "true"
    prometheus.io/port: "10254"
    {{- if .Values.ingress.enableAuth }}
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: {{ .Release.Name }}-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
    {{- end }}
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET POST"
    nginx.ingress.kubernetes.io/cors-allow-origin: {{ .Values.app.cors_allow_origin | quote }}
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  tls:
    - hosts:
        - {{ required "A valid .Values.ingress.domain entry required!" .Values.ingress.domain | quote }}
      secretName: {{ .Release.Name }}-tls-secret
  rules:
    - host: {{ required "A valid .Values.ingress.domain entry required!" .Values.ingress.domain | quote }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-service
                port:
                  number: 80
{{- end }}
